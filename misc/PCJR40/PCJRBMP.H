/* 
 * This file is part of the PCjr 40th Anniversary display I wrote
 * which draws bitmaps from various PCjr games on the screen and
 * a IBM PCjr 40 text with the date November 1, 2023.
 * (https://github.com/guldmuddypaws/PCjr/misc/PCJR40).
 * Copyright (c) 2023 Jason R Neuhaus
 * 
 * This program is free software: you can redistribute it and/or modify  
 * it under the terms of the GNU General Public License as published by  
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#define IBM_LOGO_WIDTH  10 /* bytes */
#define IBM_LOGO_HEIGHT 53 /* rows */

static const char ibm_logo_bitmap[IBM_LOGO_HEIGHT*IBM_LOGO_WIDTH] =
  {
    0xFF, 0xFC, 0xFF, 0xFF, 0xF0, 0x1F, 0xF8, 0x00, 0x03, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xF8, 0x1F, 0xF8, 0x00, 0x03, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFC, 0x1F, 0xFC, 0x00, 0x07, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFE, 0x1F, 0xFC, 0x00, 0x07, 0xFF  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0x9F, 0xFE, 0x00, 0x0F, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0x9F, 0xFE, 0x00, 0x1F, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0x9F, 0xFF, 0x00, 0x1F, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0x9F, 0xFF, 0x00, 0x3F, 0xFF  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x0F, 0xC0, 0x0F, 0xC0, 0x3F, 0x81, 0xFF, 0x80, 0x3F, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xC0, 0x3F, 0x81, 0xFF, 0xC0, 0x7F, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xC0, 0x3F, 0x81, 0xFF, 0xC0, 0x7F, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xC0, 0x3F, 0x01, 0xFF, 0xE0, 0x7F, 0xF0  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x0F, 0xC0, 0x0F, 0xFF, 0xFE, 0x01, 0xFF, 0xE1, 0xFF, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xFF, 0xFC, 0x01, 0xFF, 0xF1, 0xFF, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xFF, 0xF8, 0x01, 0xFF, 0xF1, 0xFF, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xFF, 0xF0, 0x01, 0xFF, 0xF3, 0xFF, 0xF0  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x0F, 0xC0, 0x0F, 0xFF, 0xF0, 0x01, 0xFF, 0xFF, 0xFF, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xFF, 0xF8, 0x01, 0xFF, 0xFF, 0xFF, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xFF, 0xFC, 0x01, 0xFF, 0xFF, 0xFF, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xFF, 0xFE, 0x01, 0xFF, 0xFF, 0xFF, 0xF0  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x0F, 0xC0, 0x0F, 0xC0, 0x3F, 0x01, 0xF8, 0xFF, 0xE3, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xC0, 0x3F, 0x81, 0xF8, 0xFF, 0xC3, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xC0, 0x3F, 0x81, 0xF8, 0x7F, 0xC3, 0xF0  ,
    0x0F, 0xC0, 0x0F, 0xC0, 0x3F, 0x81, 0xF8, 0x7F, 0xC3, 0xF0  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0x9F, 0xF8, 0x3F, 0x83, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0x9F, 0xF8, 0x3F, 0x03, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0x9F, 0xF8, 0x1F, 0x03, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0x9F, 0xF8, 0x1F, 0x03, 0xFF  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFE, 0x1F, 0xF8, 0x0E, 0x03, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFE, 0x1F, 0xF8, 0x0E, 0x03, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xFC, 0x1F, 0xF8, 0x04, 0x03, 0xFF  ,
    0xFF, 0xFC, 0xFF, 0xFF, 0xF8, 0x1F, 0xF8, 0x04, 0x03, 0xFF  ,
  };

#define JR_LOGO_WIDTH  4 /* bytes */
#define JR_LOGO_HEIGHT 8 /* rows */

static const char jr_logo_bitmap[JR_LOGO_HEIGHT*JR_LOGO_WIDTH] =
  {
   /* P     C     j     r */
   0xFC, 0x3C, 0x0C, 0x00,
   0x66, 0x66, 0x00, 0x00,
   0x66, 0xC0, 0x0C, 0xDC,
   0x7C, 0xC0, 0x0C, 0x76,
   0x60, 0xC0, 0x0C, 0x66,
   0x60, 0x66, 0xCC, 0x60,
   0xF0, 0x3C, 0xCC, 0xF0,
   0x00, 0x00, 0x78, 0x00,
  };

/* From King's Quest */
/* Alligator */
#define KQ_ALLIGATOR_WIDTH  6 /* bytes */
#define KQ_ALLIGATOR_HEIGHT 3 /* rows */

/* 16 color bitmap */
static const char kq_alligator_bitmap[KQ_ALLIGATOR_WIDTH*KQ_ALLIGATOR_HEIGHT] =
  {
   0x00, 0x00, 0x02, 0x22, 0x20, 0x00,
   0x20, 0x00, 0x24, 0x22, 0x00, 0x00,
   0x22, 0x22, 0x22, 0x22, 0x20, 0x20,
  };

/* Sir Graham */
#define KQ_GRAHAM_WIDTH  3 /* bytes */
#define KQ_GRAHAM_HEIGHT 29 /* rows */

/* 16 color bitmap */
static const char kq_graham_bitmap[KQ_GRAHAM_WIDTH*KQ_GRAHAM_HEIGHT] =
  {
   0x40, 0x00, 0x00,
   0x44, 0x00, 0x00,
   0xB4, 0x00, 0x00,
   0xBB, 0xB0, 0x00,
   0xBB, 0xBB, 0x00,
   0x88, 0x8E, 0x00,
   0x88, 0xEE, 0xE0,
   0x88, 0xEE, 0x00,
   0x8E, 0xEE, 0x00,
   0x0E, 0xE0, 0x00,
   0x0C, 0xC0, 0x00,
   0xCC, 0xC0, 0x00,
   0xCE, 0xC0, 0x00,
   0xCE, 0xC0, 0x00,
   0xCE, 0xC0, 0x00,
   0xCE, 0xE0, 0x00,
   0xC4, 0xEE, 0x00,
   0xCC, 0x4E, 0x00,
   0x44, 0x40, 0x00,
   0xBB, 0xB0, 0x00,
   0xBB, 0x33, 0x00,
   0x0B, 0x3B, 0x00,
   0x0B, 0x0B, 0x00,
   0xBB, 0x0B, 0x00,
   0xB0, 0x88, 0x00,
   0xB0, 0x80, 0x00,
   0x80, 0x88, 0x00,
   0x80, 0x08, 0x00,
   0x88, 0x00, 0x00,
  };

/* Goat */
#define KQ_GOAT_WIDTH  9 /* bytes */
#define KQ_GOAT_HEIGHT 23 /* rows */

/* 16 color bitmap */
static const char kq_goat_bitmap[KQ_GOAT_WIDTH*KQ_GOAT_HEIGHT] =
  {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x70, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x77, 0x47, 0x00,
   0x00, 0x07, 0x77, 0x00, 0x07, 0x77, 0x77, 0x77, 0x7C,
   0x00, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77,
   0x0F, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x7F, 0x77,
   0xF7, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x0F, 0xF0,
   0xFF, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x00, 0xF0,
   0xF0, 0x77, 0x77, 0x77, 0x77, 0x77, 0x70, 0x00, 0xF0,
   0x00, 0x77, 0x77, 0x87, 0x77, 0x77, 0x70, 0x00, 0x00,
   0x00, 0x77, 0x77, 0x88, 0x87, 0x77, 0x70, 0x00, 0x00,
   0x00, 0x07, 0x77, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00,
   0x00, 0x07, 0x78, 0x08, 0x80, 0x80, 0x70, 0x00, 0x00,
   0x00, 0x00, 0x78, 0x00, 0x00, 0x80, 0x70, 0x00, 0x00,
   0x00, 0x07, 0x78, 0x00, 0x00, 0x80, 0x77, 0x00, 0x00,
   0x00, 0x77, 0x08, 0x00, 0x08, 0x80, 0x07, 0x00, 0x00,
   0x00, 0x70, 0x08, 0x80, 0x08, 0x00, 0x07, 0x00, 0x00,
   0x00, 0x70, 0x00, 0x80, 0x08, 0x00, 0x07, 0x00, 0x00,
   0x00, 0x80, 0x00, 0x80, 0x08, 0x00, 0x08, 0x00, 0x00,
   0x00, 0x80, 0x00, 0x80, 0x08, 0x00, 0x08, 0x00, 0x00,
  };

/* Dragon 1 */
#define KQ_DRAGON1_WIDTH  17 /* bytes */
#define KQ_DRAGON1_HEIGHT 24 /* rows */

/* 16 color bitmap */
static const char kq_dragon1_bitmap[KQ_DRAGON1_WIDTH*KQ_DRAGON1_HEIGHT] =
  {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x70, 0x07, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x88, 0x80, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xEE, 0xEA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x00,
   0x00, 0x00, 0x00, 0x00, 0xE0, 0xEE, 0xEA, 0xAA, 0xA8, 0x4A, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x0C,
   0x00, 0x88, 0x80, 0x00, 0xEA, 0xAA, 0xAA, 0xAA, 0xAA, 0x4A, 0xA0, 0xA0, 0x07, 0x87, 0xC7, 0x40, 0xCC,
   0x00, 0x0A, 0xAA, 0xAA, 0xAA, 0xA2, 0xAA, 0xAA, 0x2A, 0xAA, 0xAA, 0xA0, 0x8C, 0x8C, 0x40, 0x4C, 0x4C,
   0x0A, 0xAA, 0xAA, 0xAA, 0x88, 0x8A, 0xAA, 0xA2, 0x22, 0x22, 0x22, 0x28, 0x88, 0x40, 0x07, 0x44, 0xE4,
   0x88, 0x88, 0x88, 0x88, 0x22, 0xAA, 0xAA, 0xA7, 0x77, 0x24, 0xEF, 0xEE, 0xE4, 0xCE, 0xCE, 0xE4, 0x4C,
   0x00, 0x00, 0xE2, 0x22, 0x2A, 0xAA, 0xAA, 0x77, 0x00, 0x02, 0x2F, 0xEC, 0xEE, 0xE4, 0x4E, 0x4E, 0x0C,
   0x00, 0x0E, 0xEA, 0xAA, 0xAA, 0xAA, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x04, 0xCC, 0xEE, 0xE4, 0x40, 0x00,
   0x00, 0xEA, 0xEA, 0xAA, 0x2A, 0xA2, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0xC4, 0x4E, 0x4E, 0x04, 0x40,
   0x00, 0xEA, 0xEA, 0xAA, 0xA2, 0x22, 0x7A, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xE4, 0xC0, 0x00,
   0x0E, 0xAA, 0xEA, 0xAA, 0xA2, 0x27, 0x72, 0xAA, 0x0A, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
   0x0E, 0xAA, 0xEA, 0xAA, 0xAA, 0x77, 0x02, 0x2A, 0xAA, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xEE, 0xAA, 0x22, 0xAA, 0xAA, 0x72, 0x00, 0x22, 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xEA, 0xA2, 0x00, 0xAA, 0xAA, 0x22, 0x20, 0x00, 0x22, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xEA, 0x20, 0x00, 0xAA, 0xA2, 0x22, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xE2, 0x20, 0x0A, 0xAA, 0xA0, 0x22, 0x22, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xE2, 0x00, 0x0A, 0xAA, 0x00, 0x02, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xEE, 0x00, 0xAA, 0xA0, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x2E, 0xE0, 0xAA, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x22, 0xEE, 0xEA, 0x0E, 0x00, 0x00, 0x22, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x02, 0x22, 0xEE, 0xEE, 0xE0, 0x02, 0x22, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x02, 0x22, 0x22, 0x2E, 0x02, 0x22, 0x22, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  };

/* Jumpman */
#define JM_FLOOR_WIDTH  1 /* bytes */
#define JM_FLOOR_HEIGHT 3 /* rows */

/* Color Green */
static const char jm_floor_bitmap[JM_FLOOR_HEIGHT*JM_FLOOR_WIDTH] =
  {
   0xFF,
   0xAA,
   0xFF
  };

#define JM_ALIEN_BOMB_WIDTH  1 /* bytes */
#define JM_ALIEN_BOMB_HEIGHT 3 /* rows */

/* Color Brown */
static
const char jm_alien_bomb_bitmap[JM_ALIEN_BOMB_HEIGHT*JM_ALIEN_BOMB_WIDTH] =
  {
   0x60,
   0x90,
   0x60
  };

#define JM_LADDER_WIDTH  1 /* bytes */
#define JM_LADDER_HEIGHT 4 /* rows */

/* Color bright blue */
static const char jm_ladder_bitmap[JM_LADDER_HEIGHT*JM_LADDER_WIDTH] =
  {
   0xC3,
   0xC3,
   0xFF,
   0xC3
  };

#define JM_VINE_DOWN_WIDTH  1 /* bytes */
#define JM_VINE_DOWN_HEIGHT 4 /* rows */

/* Color magenta */
static const char jm_vine_down_bitmap[JM_VINE_DOWN_HEIGHT*JM_VINE_DOWN_WIDTH] =
  {
   0x80,
   0x80,
   0x40,
   0x40
  };

#define JM_VINE_UP_WIDTH  1 /* bytes */
#define JM_VINE_UP_HEIGHT 4 /* rows */

/* Color bright cyan */
static const char jm_vine_up_bitmap[JM_VINE_UP_HEIGHT*JM_VINE_UP_WIDTH] =
  {
   0x80,
   0x40
  };

#define JM_JUMPMAN_WIDTH  3 /* bytes */
#define JM_JUMPMAN_HEIGHT 10 /* rows */

/* 16 color bitmap */
static const char jm_jumpman_bitmap[JM_JUMPMAN_HEIGHT*JM_JUMPMAN_WIDTH] =
  {
   0x00, 0xFF, 0x00,
   0x00, 0xFF, 0x00,
   0x05, 0x55, 0x50,
   0x50, 0x55, 0x05,
   0x0F, 0x55, 0xF0,
   0x00, 0x11, 0x00,
   0x00, 0x11, 0x00,
   0x00, 0x11, 0x00,
   0x00, 0x11, 0x00,
   0x0F, 0xFF, 0xF0
  };

/* Pitfall 2 */
#define PF2_SILVER_WIDTH  1 /* bytes */
#define PF2_SILVER_HEIGHT 12 /* rows */

/* Color white */
static const char pf2_silver_bitmap1[PF2_SILVER_HEIGHT*PF2_SILVER_WIDTH] =
  {
   0x10,
   0x02,
   0x40,
   0x10,
   0x08,
   0x00,
   0x3E,
   0x7E,
   0xFE,
   0xFE,
   0xFC,
   0xF8
  };
static const char pf2_silver_bitmap2[PF2_SILVER_HEIGHT*PF2_SILVER_WIDTH] =
  {
   0x00,
   0x80,
   0x10,
   0x04,
   0x20,
   0x00,
   0x3E,
   0x7E,
   0xFE,
   0xFE,
   0xFC,
   0xF8
  };
static const char pf2_silver_bitmap3[PF2_SILVER_HEIGHT*PF2_SILVER_WIDTH] =
  {
   0x00,
   0x10,
   0x04,
   0x40,
   0x10,
   0x00,
   0x3E,
   0x7E,
   0xFE,
   0xFE,
   0xFC,
   0xF8
  };

/* Pitfall 2 */
#define PF2_HARRY_WIDTH  2 /* bytes */
#define PF2_HARRY_HEIGHT 21 /* rows */

/* 16 color bitmap - Pitfall Harry */
static const char pf2_harry_bitmap[PF2_HARRY_HEIGHT*PF2_HARRY_WIDTH] =
  {
   0x66, 0x00,
   0xEE, 0x00,
   0xEE, 0x00,
   0xE0, 0x00,
   0x44, 0x00,
   0x44, 0x00,
   0x44, 0x04,
   0x44, 0x44,
   0x44, 0x40,
   0x44, 0x00,
   0x44, 0x00,
   0xAA, 0x00,
   0xAA, 0x00,
   0xAA, 0x00,
   0xAA, 0x00,
   0xAA, 0x00,
   0xAA, 0x00,
   0xAA, 0x00,
   0xAA, 0xA0,
   0xA0, 0x00,
   0xAA, 0x00
  };

/* Bat */
#define PF2_BAT_WIDTH  4 /* bytes */
#define PF2_BAT_HEIGHT 9 /* rows */

/* 16 color bitmap - Bat */
static const char pf2_bat_bitmap[PF2_BAT_HEIGHT*PF2_BAT_WIDTH] =
  {
   0x00, 0x70, 0x70, 0x00,
   0x00, 0x07, 0x00, 0x00,
   0x00, 0xC0, 0xC0, 0x00,
   0x00, 0x77, 0x70, 0x00,
   0x07, 0x77, 0x77, 0x00,
   0x77, 0x77, 0x77, 0x70,
   0x77, 0x07, 0x07, 0x70,
   0x77, 0x00, 0x07, 0x70,
   0x07, 0x70, 0x77, 0x00
  };

/* Shamus */
#define SHAMUS_WIDTH  2 /* bytes */
#define SHAMUS_HEIGHT 12 /* rows */

/* Color green */
static const char shamus_bitmap[SHAMUS_HEIGHT*SHAMUS_WIDTH] =
  {
   0x1F, 0x80,
   0x7F, 0xE0,
   0x00, 0x00,
   0x3F, 0x80,
   0x67, 0x80,
   0x3F, 0x80,
   0x07, 0x00,
   0xFF, 0x00,
   0x07, 0x00,
   0x88, 0x80,
   0x50, 0x40,
   0x23, 0x80
  };

/* Mineshaft */
#define MINESHAFT_CART_WIDTH 6  /* bytes */
#define MINESHAFT_CART_HEIGHT 8 /* rows */

/* 16 color cart */
static const char mineshaft_cart_bitmap[MINESHAFT_CART_WIDTH *
					MINESHAFT_CART_HEIGHT] =
  {
   0x00, 0x00, 0xCC, 0xCC, 0x00, 0x00,
   0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x00,
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
   0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
   0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
   0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB,
   0x00, 0xBB, 0x00, 0x00, 0xBB, 0x00
  };

#define MINESHAFT_BUG_WIDTH 6   /* bytes */
#define MINESHAFT_BUG_HEIGHT 11 /* rows */

/* 16 color bug */
static const char mineshaft_bug_bitmap[MINESHAFT_BUG_WIDTH *
				       MINESHAFT_BUG_HEIGHT] =
  {
   0xCC, 0x00, 0x00, 0x00, 0x00, 0xCC,
   0x00, 0xBB, 0x00, 0x00, 0xBB, 0x00,
   0x00, 0x00, 0xCC, 0xCC, 0x00, 0x00,
   0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x00,
   0x00, 0xFF, 0xCC, 0xCC, 0xFF, 0x00,
   0x00, 0x00, 0xCC, 0xCC, 0x00, 0x00,
   0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x00,
   0x00, 0xBB, 0xCC, 0xCC, 0xBB, 0x00,
   0x0F, 0xF0, 0x0C, 0xC0, 0x0F, 0xF0,
   0x0B, 0xB0, 0x0C, 0xC0, 0x0B, 0xB0,
   0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF,
  };

#define MINESHAFT_GEM_WIDTH 6  /* bytes */
#define MINESHAFT_GEM_HEIGHT 8 /* rows */

/* 16 color gem */
static const char mineshaft_gem_bitmap[MINESHAFT_GEM_WIDTH *
				       MINESHAFT_GEM_HEIGHT] =
  {
   0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
   0x0F, 0xFC, 0xCC, 0xCC, 0xCF, 0xF0,
   0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF,
   0x0F, 0xFC, 0xCC, 0xCC, 0xCF, 0xF0,
   0x00, 0xFF, 0xCC, 0xCC, 0xFF, 0x00,
   0x00, 0x0F, 0xFC, 0xCF, 0xF0, 0x00,
   0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
   0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00,
  };

#define MINESHAFT_DOOR_WIDTH 6   /* bytes */
#define MINESHAFT_DOOR_HEIGHT 12 /* rows */

/* 16 color door */
static const char mineshaft_door_bitmap[MINESHAFT_DOOR_WIDTH *
					MINESHAFT_DOOR_HEIGHT] =
  {
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
   0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF,
   0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF,
   0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF,
   0xFF, 0xCC, 0xCC, 0xCC, 0x00, 0xFF,
   0xFF, 0xCC, 0xCC, 0xCC, 0x00, 0xFF,
   0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF,
   0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF,
   0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF,
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
  };

/* Misc characters */
#define CHAR_40_WIDTH 2 /* bytes */
#define CHAR_40_HEIGHT 8 /* rows */

/* 2 color bitmap "40" */
static const char char_40_bitmap[CHAR_40_WIDTH*CHAR_40_HEIGHT] =
  {
   /* 4     0 */
   0x1C, 0x7C,
   0x3C, 0xC6,
   0x6C, 0xCE,
   0xCC, 0xDE,
   0xFE, 0xF6,
   0x0C, 0xE6,
   0x1E, 0x7C,
   0x00, 0x00,
  };

#define CHAR_DATE_WIDTH 16 /* bytes */
#define CHAR_DATE_HEIGHT 8 /* rows */

/* 2 color bitmap "November 1, 2023" */
static const char char_date_bitmap[CHAR_DATE_WIDTH*CHAR_DATE_HEIGHT] =
  {
   /* N     o     v     e     m     b     e     r           1     ,           2     0     2     3 */   
   0xC6, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x78, 0x7C, 0x78, 0x78,
   0xE6, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0xCC, 0xC6, 0xCC, 0xCC,
   0xF6, 0x78, 0xCC, 0x78, 0xCC, 0x60, 0x78, 0xDC, 0x00, 0x30, 0x00, 0x00, 0x0C, 0xCE, 0x0C, 0x0C,
   0xDE, 0xCC, 0xCC, 0xCC, 0xFE, 0x7C, 0xCC, 0x76, 0x00, 0x30, 0x00, 0x00, 0x38, 0xDE, 0x38, 0x38,
   0xCE, 0xCC, 0xCC, 0xFC, 0xFE, 0x66, 0xFC, 0x66, 0x00, 0x30, 0x00, 0x00, 0x60, 0xF6, 0x60, 0x0C,
   0xC6, 0xCC, 0x78, 0xC0, 0xD6, 0x66, 0xC0, 0x60, 0x00, 0x30, 0x30, 0x00, 0xCC, 0xE6, 0xCC, 0xCC,
   0xC6, 0x78, 0x30, 0x78, 0xC6, 0xDC, 0x78, 0xF0, 0x00, 0xFC, 0x30, 0x00, 0xFC, 0x7C, 0xFC, 0x78,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
  };
